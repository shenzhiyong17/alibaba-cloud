<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="szy.cloud.order.mapper.OrderMapper">
<!--    <resultMap id="order" type="szy.cloud.order.module.Order" autoMapping="true"/>-->
    <resultMap id="BaseResultMap" type="szy.cloud.order.module.Order" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="product_id" property="productId" jdbcType="INTEGER" />
        <result column="price" property="price" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="pay_time" property="payTime" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="BIGINT" />
        <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    </resultMap>

    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select * from `order` where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" useGeneratedKeys="true" parameterType="szy.cloud.order.module.Order">
    insert into `order` (product_id, price, status, user_id, user_name, pay_time, create_time, update_time )
        values ( #{productId,jdbcType=INTEGER},
            #{price,jdbcType=INTEGER},
            #{status,jdbcType=INTEGER},
            #{userId,jdbcType=INTEGER},
            #{userName,jdbcType=VARCHAR},
            #{payTime,jdbcType=BIGINT},
            #{createTime,jdbcType=BIGINT},
            #{updateTime,jdbcType=BIGINT}
        )
    </insert>

    <delete id="delete">
        delete from `order` where id = #{id}
    </delete>

    <update id="updateStatus" >
        update `order` set status = #{status} where id = #{id}
    </update>

    <update id="update" parameterType="szy.cloud.order.module.Order">
        update `order`
        <set>
            <if test="price != null">
                price = #{price,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime !=null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="payTime != null" >
                pay_time = #{payTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INT}
    </update>
</mapper>