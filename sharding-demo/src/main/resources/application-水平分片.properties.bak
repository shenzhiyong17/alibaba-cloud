spring.application.name=sharding-demo

spring.shardingsphere.mode.type=Memory
spring.shardingsphere.props.sql-show=true

# --------------------------------------数据源配置
spring.shardingsphere.datasource.names=server-order0,server-order1

spring.shardingsphere.datasource.server-order0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-order0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-order0.jdbc-url=jdbc:mysql://127.0.0.1:3310/db_order?serverTimezone=UTC
spring.shardingsphere.datasource.server-order0.username=root
spring.shardingsphere.datasource.server-order0.password=123456

spring.shardingsphere.datasource.server-order1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.server-order1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.server-order1.jdbc-url=jdbc:mysql://127.0.0.1:3311/db_order?serverTimezone=UTC
spring.shardingsphere.datasource.server-order1.username=root
spring.shardingsphere.datasource.server-order1.password=123456

# --------------------------------------分片配置
#spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=server-order0.order1
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=server-order$->{0..1}.order$->{[0,1]}


# --------------------------------------设置分库策略（分库用INLINE，分表用HASH_MOD）
# 设置t_order分表键
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
# 设置t_order分库算法名称
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=alg_inline_userid
# inline 分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_inline_userid.props.algorithm-expression=server-order$->{user_id % 2}

# --------------------------------------设置分表策略
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_no
# 设置分表算法名称
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=alg_hash_mod

# hashMod 分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.type=HASH_MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_hash_mod.props.sharding-count=2

# -------------------------------------- 分布式序列id，跟@TableId的type属性冲突，需要配置@TableId(type=IdType.AUTO)
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=alg_snowflake
# 支持雪花算法和UUID
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
